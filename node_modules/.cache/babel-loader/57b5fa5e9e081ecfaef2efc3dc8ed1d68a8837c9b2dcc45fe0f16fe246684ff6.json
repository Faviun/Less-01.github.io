{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Favian\\\\Desktop\\\\React_JS\\\\LES_1\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPostsContainer.jsx\";\nimport React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/ProfileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../../Redux/DialogsReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPostsContainer = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let addPost = () => {\n        store.dispatch(addPostActionCreator());\n      };\n      let onPostChange = text => {\n        let action = updateNewPostTextActionCreator(text);\n        store.dispatch(action);\n      };\n      return /*#__PURE__*/_jsxDEV(MyPosts, {\n        updateNewPostText: onPostChange,\n        addPost: addPost,\n        posts: store.getState().profilePage.posts,\n        newPostText: store.getState().profilePage.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPostsContainer;\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    newPostText: state.newPostText\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostText: () => {\n      dispatch(addPostActionCreator());\n    },\n    addPost: text => {\n      dispatch(updateNewPostTextActionCreator(text));\n    }\n  };\n};\nconst SMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\nvar _c;\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","connect","sendMessageCreator","updateNewMessageBodyCreator","jsxDEV","_jsxDEV","MyPostsContainer","props","StoreContext","Consumer","children","store","addPost","dispatch","onPostChange","text","action","updateNewPostText","posts","getState","profilePage","newPostText","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","mapDispatchToProps","SMyPostsContainer","$RefreshReg$"],"sources":["C:/Users/Favian/Desktop/React_JS/LES_1/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../../Redux/DialogsReducer\";\r\n\r\nconst MyPostsContainer = (props) => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {(store) => {\r\n                let addPost =  () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                }\r\n        return <MyPosts\r\n        updateNewPostText = {onPostChange}\r\n        addPost={addPost}\r\n        posts={store.getState().profilePage.posts}\r\n        newPostText={store.getState().profilePage.newPostText} />}}\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts,\r\n        newPostText: state.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: () => {dispatch(addPostActionCreator())},\r\n        addPost: (text) => {dispatch(updateNewPostTextActionCreator(text))}\r\n    }\r\n}\r\n\r\nconst SMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,oBAAoB,EAAEC,8BAA8B,QAAO,+BAA+B;AAClG,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAQC,kBAAkB,EAAEC,2BAA2B,QAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAEhC,oBACIF,OAAA,CAACG,YAAY,CAACC,QAAQ;IAAAC,QAAA,EAChBC,KAAK,IAAK;MACR,IAAIC,OAAO,GAAIA,CAAA,KAAM;QACjBD,KAAK,CAACE,QAAQ,CAACf,oBAAoB,EAAE,CAAC;MAC1C,CAAC;MAED,IAAIgB,YAAY,GAAIC,IAAI,IAAK;QACzB,IAAIC,MAAM,GAAGjB,8BAA8B,CAACgB,IAAI,CAAC;QACjDJ,KAAK,CAACE,QAAQ,CAACG,MAAM,CAAC;MAC1B,CAAC;MACT,oBAAOX,OAAA,CAACL,OAAO;QACfiB,iBAAiB,EAAIH,YAAa;QAClCF,OAAO,EAAEA,OAAQ;QACjBM,KAAK,EAAEP,KAAK,CAACQ,QAAQ,EAAE,CAACC,WAAW,CAACF,KAAM;QAC1CG,WAAW,EAAEV,KAAK,CAACQ,QAAQ,EAAE,CAACC,WAAW,CAACC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEhC,CAAC;AAAAC,EAAA,GApBKpB,gBAAgB;AAsBtB,IAAIqB,eAAe,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACHV,KAAK,EAAEU,KAAK,CAACV,KAAK;IAClBG,WAAW,EAAEO,KAAK,CAACP;EACvB,CAAC;AACL,CAAC;AAED,IAAIQ,kBAAkB,GAAIhB,QAAQ,IAAK;EACnC,OAAO;IACHI,iBAAiB,EAAEA,CAAA,KAAM;MAACJ,QAAQ,CAACf,oBAAoB,EAAE,CAAC;IAAA,CAAC;IAC3Dc,OAAO,EAAGG,IAAI,IAAK;MAACF,QAAQ,CAACd,8BAA8B,CAACgB,IAAI,CAAC,CAAC;IAAA;EACtE,CAAC;AACL,CAAC;AAED,MAAMe,iBAAiB,GAAG7B,OAAO,CAAC0B,eAAe,EAAEE,kBAAkB,CAAC,CAAC7B,OAAO,CAAC;AAE/E,eAAeM,gBAAgB;AAAC,IAAAoB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}